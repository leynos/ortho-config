name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
      BUILD_PROFILE: debug
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            coverage: true
          - os: windows-latest
            coverage: false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@v1.0.3
      - name: Cache CodeScene CLI
        if: matrix.coverage && env.CS_ACCESS_TOKEN
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/cs-coverage
          key: ${{ runner.os }}-cs-cli-${{ env.CODESCENE_CLI_SHA256 }}
      - name: Format
        shell: bash
        run: cargo fmt --all -- --check
      - name: Lint
        shell: bash
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Test
        shell: bash
        run: RUSTFLAGS="-D warnings" cargo test --tests
      - name: Install cargo-tarpaulin
        if: matrix.coverage
        shell: bash
        run: cargo install cargo-tarpaulin --version 0.32.7
      - name: Run coverage
        if: matrix.coverage
        shell: bash
        run: cargo tarpaulin --out lcov
      - name: Install CodeScene coverage tool
        if: matrix.coverage && env.CS_ACCESS_TOKEN
        shell: bash
        run: |
          set -euo pipefail
          curl -fsSL -o install-cs-coverage-tool.sh https://downloads.codescene.io/enterprise/cli/install-cs-coverage-tool.sh
          if [ -n "${CODESCENE_CLI_SHA256:-}" ]; then
            echo "${CODESCENE_CLI_SHA256}  install-cs-coverage-tool.sh" | sha256sum -c -
          fi
          bash install-cs-coverage-tool.sh -y
          rm install-cs-coverage-tool.sh
      - name: Upload coverage data to CodeScene
        if: env.CS_ACCESS_TOKEN && matrix.os == 'ubuntu-latest'
        shell: bash
        run: cs-coverage upload --format "lcov" --metric "line-coverage" "lcov.info"

