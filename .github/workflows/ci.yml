name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
      BUILD_PROFILE: debug
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            coverage: true
          - os: windows-latest
            coverage: false
    steps:
      - uses: actions/checkout@v4
      - name: Ensure bump_version script is executable
        if: runner.os == 'Linux'
        shell: bash
        run: test -x scripts/bump_version.py
      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@d8ec06a02063104524716eea3efdb786f8cf078e
      - name: Show Ninja version
        run: ninja --version
      - name: Format
        run: make check-fmt
      - name: Lint
        run: make lint
      - name: Test
        run: make test
      - name: Test and Measure Coverage
        uses: leynos/shared-actions/.github/actions/generate-coverage@d8ec06a02063104524716eea3efdb786f8cf078e
        with:
          output-path: lcov.info
          format: lcov
      - name: Upload coverage data to CodeScene
        env:
          CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
        if: ${{ env.CS_ACCESS_TOKEN }}
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@d8ec06a02063104524716eea3efdb786f8cf078e
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ vars.CODESCENE_CLI_SHA256 }}

